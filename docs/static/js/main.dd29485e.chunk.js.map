{"version":3,"sources":["components/AddCategory.js","helpers/getGif.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","length","categoria","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","imges","GiftExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,uBAAMC,SAXU,SAACC,GACjBA,EAAEC,iBAECJ,EAAWK,OAAS,IACnBP,GAAa,SAAAQ,GAAS,OAAKN,GAAL,mBAAmBM,OACzCL,EAAc,MAMlB,UACI,6BAAKD,IACL,uBAAQO,KAAK,OACLC,MAAOR,EACPS,SAnBU,SAACN,GACvBF,EAAcE,EAAEO,OAAOF,c,+BCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,0FAEkEC,UAAUH,GAF5E,sBAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVnB,kBAeZM,GAfY,4CAAH,sDCCPO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAC/B,OACI,sBAAKc,UAAU,OAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BACKA,QCFJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAE1B,ECJ4B,SAAEA,GAC1B,MAA0Bb,mBAAS,CAC/BoB,KAAK,GACLa,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAVAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAM,SAAAd,GACHY,EAAS,CACLf,KAAMG,EACNU,SAAS,SAGtB,CAACpB,IAEGqB,EDbkBI,CAAazB,GAA9B0B,EAAZ,EAAOnB,KAAWa,EAAlB,EAAkBA,QAGhB,OACE,qCACE,6BAAKpB,IACFoB,GAAW,wCACZ,qBAAKJ,UAAU,gDAAf,SAEIU,EAAMjB,KAAI,SAACC,GAAD,OACN,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEZzBgB,EAAgB,WAEzB,MAAkCxC,mBAAS,CAAC,aAA5C,mBAAOyC,EAAP,KAAmB1C,EAAnB,KAMA,OACI,qCACI,+CACA,uBAEA,6CACA,cAAC,EAAD,CAAaA,YAAaA,IAE1B,6BAEQ0C,EAAWnB,KAAI,SAAAf,GAAS,OACpB,cAAC,EAAD,CAEQM,SAAUN,GADLA,Y,MClBrCmC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.dd29485e.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({setCategory}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit= (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.length > 2){\r\n            setCategory( categoria => [inputValue,...categoria]);\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h1>{inputValue}</h1>\r\n            <input  type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}/>  \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategory: PropTypes.func.isRequired\r\n}\r\n","\r\nexport const getGifs = async (category) => {\r\n    const url =\r\n      `https://api.giphy.com/v1/gifs/search?api_key=V6dZCV3z4zPOBUm7kJkLPh7IqYS3W2M2&q=${encodeURI(category)}&limit=10`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url,\r\n      };\r\n    });\r\n\r\n    \r\n    return gifs;\r\n  };","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={url} alt={title}/>\r\n            <p>\r\n                {title}\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  \r\nconst {data:imges,loading} = useFetchGifs(category);\r\n\r\n\r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n        {loading && <p>Loading</p> }\r\n        <div className=\"card-grid animate__animated animate__fadeInUp\">\r\n        {\r\n            imges.map((img) => (\r\n                <GifGridItem key={img.id} {...img} />\r\n            ))\r\n        }\r\n        </div>\r\n    </>\r\n  );\r\n};\r\n","import {useState, useEffect} from 'react';\r\nimport { getGifs } from \"../helpers/getGif\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    \r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then( img => {\r\n                setState({\r\n                    data: img,\r\n                    loading: false\r\n                });\r\n            });\r\n    }, [category]);\r\n\r\n    return state;\r\n}\r\n","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GiftExpertApp = () => {\r\n\r\n    const [categorias, setCategory] = useState([\"One push\"]);\r\n\r\n//    const handleAdd = () => {\r\n//        setCategory([\"Kimetsu\",...categorias]);\r\n//    }\r\n\r\n    return (\r\n        <>\r\n            <h2>GiftExpertApp</h2>\r\n            <hr/>\r\n\r\n            <h2>AddCategory</h2>\r\n            <AddCategory setCategory={setCategory}/>\r\n\r\n            <ol>\r\n                {\r\n                    categorias.map(categoria => (\r\n                        <GifGrid    \r\n                                key={categoria} \r\n                                category={categoria}/>\r\n                    ))\r\n                }\r\n            </ol>\r\n        \r\n        \r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GiftExpertApp } from './GiftExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n  <GiftExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}